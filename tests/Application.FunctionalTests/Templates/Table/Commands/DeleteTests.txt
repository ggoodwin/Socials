using [APP].Application.[ITEM]s.Commands.Create[ITEM];
using [APP].Application.[ITEM]s.Commands.Delete[ITEM];
using [APP].Domain.Entities;

namespace [APP].Application.FunctionalTests.[ITEM]s.Commands;

using static Testing;

public class Delete[ITEM]Tests : BaseTestFixture
{
    [Test]
    public async Task ShouldRequireValid[ITEM]Id()
    {
        var command = new Delete[ITEM]Command(99);

        await FluentActions.Invoking(() =>
            SendAsync(command)).Should().ThrowAsync<NotFoundException>();
    }

    [Test]
    public async Task ShouldDelete[ITEM]()
    {

        var itemId = await SendAsync(new Create[ITEM]Command
        {
            Title = "New [ITEM]"
        });

        await SendAsync(new Delete[ITEM]Command(itemId));

        var item = await FindAsync<[ITEM]>(itemId);

        item.Should().BeNull();
    }
}
